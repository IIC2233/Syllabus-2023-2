import sys
import unittest

# Advertencia, la siguiente línea solo es utiliza por el cuerpo docente.
# Se considerará una mala práctica ocuparlo en sus evaluaciones.
sys.path.append("..")

from tablero import Tablero


class TestLimpiar(unittest.TestCase):

    def test_12x12(self):
        tablero_str = [
            ["PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1"],
            ["V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP"],
            ["PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1"],
            ["H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP"],
            ["PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1"],
            ["V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP"],
            ["PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1"],
            ["H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP"],
            ["PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1"],
            ["V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP"],
            ["PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1"],
            ["H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP", "H1", "PP", "V1", "PP"],
        ]
        tablero = Tablero(tablero_str)
        tablero.limpiar()
        # Verificar formato y respuesta
        self.assertIsInstance(tablero.tablero, list)
        self.assertListEqual(tablero.tablero, [
            ["--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1"],
            ["V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--"],
            ["--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1"],
            ["H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--"],
            ["--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1"],
            ["V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--"],
            ["--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1"],
            ["H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--"],
            ["--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1"],
            ["V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--"],
            ["--", "H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1"],
            ["H1", "--", "V1", "--", "H1", "--", "V1", "--", "H1", "--", "V1", "--"],
            ])

    def test_12x12_no_peones(self):
        tablero_str = [
            ['V8', '--', '--', 'V8', '--', 'V8', 'V8', '--', '--', 'V8', 'H8', 'V8'],
            ['H4', 'V8', '--', 'V8', '--', 'R2', 'H8', 'R2', '--', 'H6', 'V8', '--'],
            ['V8', '--', 'R2', 'V8', '--', 'H8', 'H8', 'V8', '--', 'R2', '--', 'H8'],
            ['--', '--', 'H8', '--', '--', '--', '--', 'R2', '--', '--', 'V8', 'H8'],
            ['--', 'H8', 'H8', '--', '--', 'V8', 'H8', '--', 'H8', '--', '--', 'V8'],
            ['H8', 'H8', '--', '--', '--', 'V8', 'R2', 'R2', 'V8', 'V8', '--', 'H8'],
            ['R2', '--', 'V8', '--', 'R2', '--', 'H8', '--', 'R2', 'V3', '--', 'R2'],
            ['--', 'V8', '--', 'V8', '--', 'H8', 'H8', '--', 'H8', 'R2', 'R2', 'R2'],
            ['V8', 'H8', '--', '--', 'H8', '--', 'H8', 'V8', '--', '--', '--', '--'],
            ['--', '--', 'V8', 'V8', '--', '--', 'H8', '--', 'R1', '--', '--', 'H8'],
            ['R2', 'H8', '--', 'V8', 'H8', 'H8', '--', '--', 'H8', '--', 'V8', '--'],
            ['R2', 'V8', 'V8', '--', 'H1', 'V8', '--', 'H8', '--', '--', 'H8', 'V8'],
        ]
        tablero = Tablero(tablero_str)
        tablero.limpiar()
        # Verificar formato y respuesta
        self.assertIsInstance(tablero.tablero, list)
        self.assertListEqual(tablero.tablero, [
            ['V8', '--', '--', 'V8', '--', 'V8', 'V8', '--', '--', 'V8', 'H8', 'V8'],
            ['H4', 'V8', '--', 'V8', '--', 'R2', 'H8', 'R2', '--', 'H6', 'V8', '--'],
            ['V8', '--', 'R2', 'V8', '--', 'H8', 'H8', 'V8', '--', 'R2', '--', 'H8'],
            ['--', '--', 'H8', '--', '--', '--', '--', 'R2', '--', '--', 'V8', 'H8'],
            ['--', 'H8', 'H8', '--', '--', 'V8', 'H8', '--', 'H8', '--', '--', 'V8'],
            ['H8', 'H8', '--', '--', '--', 'V8', 'R2', 'R2', 'V8', 'V8', '--', 'H8'],
            ['R2', '--', 'V8', '--', 'R2', '--', 'H8', '--', 'R2', 'V3', '--', 'R2'],
            ['--', 'V8', '--', 'V8', '--', 'H8', 'H8', '--', 'H8', 'R2', 'R2', 'R2'],
            ['V8', 'H8', '--', '--', 'H8', '--', 'H8', 'V8', '--', '--', '--', '--'],
            ['--', '--', 'V8', 'V8', '--', '--', 'H8', '--', 'R1', '--', '--', 'H8'],
            ['R2', 'H8', '--', 'V8', 'H8', 'H8', '--', '--', 'H8', '--', 'V8', '--'],
            ['R2', 'V8', 'V8', '--', 'H1', 'V8', '--', 'H8', '--', '--', 'H8', 'V8'],
            ])

    def test_20x20(self):
        tablero_str = [
            ['PP', '--', 'R2', 'PP', 'H8', 'H8', 'PP', 'H8', 'PP', 'PP', '--', 'PP', 'R2', 'PP', 'PP', 'V8', 'R2', 'PP', 'V8', 'PP'],
            ['V8', 'PP', 'R2', 'PP', 'PP', 'PP', 'R2', 'H3', 'V8', 'H8', 'PP', 'PP', 'PP', 'V8', 'PP', 'PP', '--', 'PP', 'PP', 'R2'],
            ['R2', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', '--', 'PP', 'R2', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', '--', 'PP'],
            ['PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8', 'PP', 'PP', 'PP', '--', 'PP', 'PP', 'PP', 'PP', 'H8', '--', '--', '--'],
            ['R2', '--', 'V8', 'PP', 'PP', 'PP', 'PP', 'R6', 'PP', 'PP', 'R2', 'H8', 'V8', 'PP', 'PP', 'PP', 'PP', 'R2', 'H8', 'V8'],
            ['PP', 'V8', 'PP', 'PP', 'H8', 'PP', 'PP', 'PP', 'R2', 'R2', 'H8', 'PP', 'PP', 'V8', 'V8', 'R2', 'PP', 'PP', 'PP', 'H8'],
            ['--', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'R2', 'PP', '--', 'PP', 'PP', 'PP', 'R2'],
            ['PP', 'PP', 'V8', 'PP', 'PP', 'PP', 'V8', 'PP', 'H8', 'H8', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP'],
            ['R2', 'PP', 'R2', 'H8', 'H8', 'R2', 'V8', 'PP', 'PP', 'PP', 'R2', 'H8', 'V8', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP'],
            ['V9', 'PP', 'PP', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'H8', 'H8', 'PP', 'PP', 'PP', 'PP', 'PP'],
            ['PP', 'PP', 'PP', 'H8', 'V8', 'PP', 'PP', '--', 'PP', 'PP', '--', 'V8', 'R3', 'V8', 'PP', 'PP', 'R2', 'R2', 'PP', 'R2'],
            ['R2', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'H8', 'PP', 'PP', '--', 'R2', 'PP'],
            ['PP', 'PP', 'H8', 'V4', 'PP', 'PP', 'V8', 'PP', '--', 'PP', 'H8', 'V8', 'H8', 'H8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP'],
            ['PP', '--', 'PP', 'PP', '--', 'PP', 'H8', 'V8', '--', 'PP', 'PP', '--', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8'],
            ['PP', '--', '--', '--', '--', 'PP', 'PP', '--', 'PP', 'R2', 'PP', '--', 'V8', 'PP', 'PP', 'PP', 'PP', 'H8', 'H8', 'R2'],
            ['R2', 'R2', 'R2', 'PP', 'PP', 'PP', 'V8', 'H8', 'R2', 'PP', '--', 'PP', 'V8', 'PP', 'R2', 'V8', 'V8', 'H8', '--', 'PP'],
            ['PP', 'PP', 'PP', '--', 'PP', 'V8', '--', 'R1', 'H8', 'H8', '--', '--', 'PP', 'H8', 'PP', 'PP', 'H8', 'V8', 'PP', '--'],
            ['PP', 'PP', '--', 'R2', 'V8', 'PP', 'PP', 'PP', 'V8', 'PP', 'H8', 'PP', 'R7', 'V8', 'PP', '--', '--', 'H8', 'V8', 'V8'],
            ['R2', 'PP', 'H5', 'PP', 'PP', 'PP', 'PP', 'H8', 'V5', 'R2', 'PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'R2', 'PP', 'R2', '--'],
            ['PP', '--', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'PP', 'H8', 'V5', 'PP', '--', 'PP', 'PP', '--', 'H8', '--', 'PP', 'PP'],
        ]
        tablero = Tablero(tablero_str)
        tablero.limpiar()
        # Verificar formato y respuesta
        self.assertIsInstance(tablero.tablero, list)
        self.assertListEqual(tablero.tablero, [
            ['--', '--', 'R2', '--', 'H8', 'H8', '--', 'H8', '--', '--', '--', '--', 'R2', '--', '--', 'V8', 'R2', '--', 'V8', '--'],
            ['V8', '--', 'R2', '--', '--', '--', 'R2', 'H3', 'V8', 'H8', '--', '--', '--', 'V8', '--', '--', '--', '--', '--', 'R2'],
            ['R2', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', 'R2', '--', '--', 'R2', '--', '--', '--', '--', '--'],
            ['--', '--', '--', '--', '--', '--', '--', 'V8', '--', '--', '--', '--', '--', '--', '--', '--', 'H8', '--', '--', '--'],
            ['R2', '--', 'V8', '--', '--', '--', '--', 'R6', '--', '--', 'R2', 'H8', 'V8', '--', '--', '--', '--', 'R2', 'H8', 'V8'],
            ['--', 'V8', '--', '--', 'H8', '--', '--', '--', 'R2', 'R2', 'H8', '--', '--', 'V8', 'V8', 'R2', '--', '--', '--', 'H8'],
            ['--', '--', 'V8', '--', '--', '--', '--', '--', '--', 'R2', '--', '--', '--', 'R2', '--', '--', '--', '--', '--', 'R2'],
            ['--', '--', 'V8', '--', '--', '--', 'V8', '--', 'H8', 'H8', 'V8', '--', '--', '--', '--', '--', '--', '--', '--', '--'],
            ['R2', '--', 'R2', 'H8', 'H8', 'R2', 'V8', '--', '--', '--', 'R2', 'H8', 'V8', '--', 'V8', '--', '--', '--', '--', '--'],
            ['V9', '--', '--', '--', 'V8', '--', '--', '--', '--', 'R2', '--', '--', '--', 'H8', 'H8', '--', '--', '--', '--', '--'],
            ['--', '--', '--', 'H8', 'V8', '--', '--', '--', '--', '--', '--', 'V8', 'R3', 'V8', '--', '--', 'R2', 'R2', '--', 'R2'],
            ['R2', '--', '--', 'R2', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', 'H8', '--', '--', '--', 'R2', '--'],
            ['--', '--', 'H8', 'V4', '--', '--', 'V8', '--', '--', '--', 'H8', 'V8', 'H8', 'H8', '--', '--', '--', '--', '--', '--'],
            ['--', '--', '--', '--', '--', '--', 'H8', 'V8', '--', '--', '--', '--', 'V8', '--', '--', '--', '--', '--', '--', 'V8'],
            ['--', '--', '--', '--', '--', '--', '--', '--', '--', 'R2', '--', '--', 'V8', '--', '--', '--', '--', 'H8', 'H8', 'R2'],
            ['R2', 'R2', 'R2', '--', '--', '--', 'V8', 'H8', 'R2', '--', '--', '--', 'V8', '--', 'R2', 'V8', 'V8', 'H8', '--', '--'],
            ['--', '--', '--', '--', '--', 'V8', '--', 'R1', 'H8', 'H8', '--', '--', '--', 'H8', '--', '--', 'H8', 'V8', '--', '--'],
            ['--', '--', '--', 'R2', 'V8', '--', '--', '--', 'V8', '--', 'H8', '--', 'R7', 'V8', '--', '--', '--', 'H8', 'V8', 'V8'],
            ['R2', '--', 'H5', '--', '--', '--', '--', 'H8', 'V5', 'R2', '--', '--', '--', '--', 'R2', '--', 'R2', '--', 'R2', '--'],
            ['--', '--', '--', 'R2', '--', '--', '--', '--', '--', 'H8', 'V5', '--', '--', '--', '--', '--', 'H8', '--', '--', '--'],
            ])

    def test_32x32(self):
        tablero_str = [
                ['R2', 'PP', 'PP', 'R2', 'V8', 'V8', 'PP', 'PP', 'PP', 'R9', 'R2', 'PP', 'PP', 'V8', 'PP', 'R9', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'PP', 'R2', 'H6', 'R9', 'PP', 'PP', 'R2', 'PP', 'PP'],
                ['R2', 'H8', 'H8', 'PP', 'V6', 'V8', 'PP', 'H8', 'R2', 'PP', 'R9', 'PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'R2', 'R2', 'PP', 'H8', 'PP', 'R2', 'H8', 'PP', 'H8', 'H8', 'R2', 'PP'],
                ['V8', 'PP', 'PP', 'H6', 'PP', 'R2', 'PP', 'PP', 'PP', 'R9', 'V8', 'PP', 'V8', 'H8', 'PP', 'H8', 'PP', 'R9', 'H8', 'PP', 'PP', 'H8', 'R9', 'R2', 'V8', 'PP', 'PP', 'PP', 'H8', 'PP', 'PP', 'PP'],
                ['R9', 'PP', 'PP', 'H8', 'R2', 'V8', 'R9', 'R9', 'V8', 'H3', 'PP', 'PP', 'PP', 'R9', 'V8', 'PP', 'H8', 'H8', 'V8', 'PP', 'H6', 'PP', 'H8', 'PP', 'PP', 'R9', 'PP', 'PP', 'PP', 'R9', 'PP', 'PP'],
                ['PP', 'H9', 'PP', 'V8', 'V8', 'PP', 'PP', 'PP', 'PP', 'H3', 'R2', 'R2', 'R2', 'R2', 'H8', 'PP', 'R2', 'PP', 'V8', 'PP', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8', 'PP', 'H8', 'V8'],
                ['R2', 'PP', 'PP', 'H8', 'R2', 'PP', 'PP', 'PP', 'PP', 'H8', 'V8', 'H8', 'R9', 'R9', 'PP', 'R9', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'R2', 'R2', 'R7', 'PP', 'R2', 'V8', 'R2', 'PP', 'PP', 'H8'],
                ['H8', 'PP', 'PP', 'PP', 'H9', 'H8', 'PP', 'PP', 'R2', 'PP', 'PP', 'R9', 'H8', 'PP', 'R9', 'PP', 'PP', 'R2', 'PP', 'PP', 'R2', 'R9', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'R9', 'PP', 'R7', 'PP'],
                ['R9', 'R2', 'PP', 'R9', 'V8', 'PP', 'V8', 'PP', 'PP', 'R9', 'PP', 'R2', 'PP', 'R2', 'V2', 'V8', 'PP', 'PP', 'PP', 'PP', 'V8', 'R9', 'V8', 'PP', 'PP', 'R2', 'H8', 'PP', 'PP', 'R2', 'PP', 'PP'],
                ['PP', 'R2', 'PP', 'R2', 'H8', 'PP', 'PP', 'R2', 'PP', 'R2', 'V8', 'V8', 'PP', 'PP', 'V8', 'R2', 'H8', 'PP', 'PP', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8', 'PP', 'R9', 'R2', 'R9'],
                ['R2', 'R9', 'R9', 'PP', 'R2', 'R2', 'R9', 'R2', 'R7', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8', 'PP', 'H9', 'R2', 'PP', 'PP', 'R9', 'R9', 'R9', 'PP', 'PP', 'PP', 'PP', 'H8', 'V8'],
                ['H8', 'R2', 'H8', 'PP', 'PP', 'H8', 'PP', 'PP', 'PP', 'R9', 'PP', 'R2', 'PP', 'PP', 'R9', 'V5', 'V8', 'PP', 'H8', 'PP', 'R2', 'R9', 'R9', 'PP', 'PP', 'R2', 'R9', 'H8', 'H8', 'PP', 'R9', 'PP'],
                ['PP', 'PP', 'R9', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'R9', 'H8', 'PP', 'V8', 'PP', 'PP', 'V8', 'PP', 'H8', 'PP', 'PP', 'PP', 'PP', 'PP', 'R9', 'R9', 'H8', 'PP', 'PP', 'PP', 'R2', 'R9', 'PP'],
                ['R2', 'V8', 'V8', 'R9', 'R9', 'R9', 'V8', 'R6', 'PP', 'PP', 'PP', 'PP', 'R2', 'V8', 'PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'V8', 'PP', 'PP', 'PP', 'H8', 'V8', 'PP', 'PP', 'H8', 'PP', 'R9'],
                ['H8', 'PP', 'PP', 'R2', 'R9', 'H5', 'PP', 'V8', 'R2', 'R2', 'PP', 'PP', 'PP', 'R9', 'H8', 'PP', 'PP', 'PP', 'PP', 'V4', 'PP', 'R2', 'PP', 'PP', 'R9', 'R2', 'PP', 'PP', 'R2', 'PP', 'R2', 'PP'],
                ['PP', 'PP', 'PP', 'V2', 'PP', 'V8', 'V8', 'PP', 'PP', 'R9', 'R9', 'R2', 'V8', 'PP', 'H8', 'R2', 'V7', 'R9', 'PP', 'PP', 'PP', 'PP', 'V4', 'PP', 'PP', 'R9', 'PP', 'R9', 'PP', 'PP', 'V8', 'PP'],
                ['R2', 'PP', 'PP', 'PP', 'PP', 'R2', 'R9', 'PP', 'R9', 'R2', 'PP', 'R9', 'R2', 'R2', 'PP', 'PP', 'PP', 'R9', 'R2', 'PP', 'H4', 'PP', 'H4', 'V8', 'PP', 'R2', 'V4', 'PP', 'R2', 'PP', 'R2', 'PP'],
                ['R9', 'R2', 'R2', 'PP', 'R9', 'PP', 'R9', 'R9', 'H8', 'PP', 'R9', 'R2', 'PP', 'V7', 'PP', 'R2', 'PP', 'PP', 'H8', 'R2', 'PP', 'PP', 'H6', 'PP', 'H8', 'PP', 'PP', 'V8', 'H8', 'H8', 'R9', 'PP'],
                ['R2', 'R9', 'V8', 'PP', 'PP', 'R6', 'PP', 'H1', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'R9', 'PP', 'R9', 'PP', 'PP', 'H6', 'R2', 'PP', 'R9', 'H8', 'H8', 'R9', 'R9', 'V2'],
                ['PP', 'R2', 'R9', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8', 'PP', 'R9', 'PP', 'V5', 'PP', 'PP', 'R9', 'R9', 'R2', 'R2', 'PP', 'H5', 'PP', 'R2', 'R2', 'PP', 'PP', 'PP', 'V9', 'PP', 'H8', 'PP', 'R9'],
                ['R9', 'PP', 'H8', 'R9', 'PP', 'PP', 'PP', 'R2', 'V8', 'R2', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'R2', 'R9', 'H8', 'PP', 'PP', 'R1', 'PP', 'V8', 'V8', 'R9', 'PP', 'R2', 'PP', 'PP', 'R2'],
                ['R2', 'R2', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'H8', 'PP', 'V8', 'PP', 'PP', 'H8', 'PP', 'R2', 'R9', 'R9', 'R2', 'PP', 'V8', 'PP', 'PP', 'H8', 'H8', 'PP', 'H8', 'R9', 'PP', 'R2', 'PP', 'R9'],
                ['R9', 'PP', 'PP', 'PP', 'PP', 'R9', 'PP', 'R2', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'R9', 'R2', 'H8', 'R9', 'H8', 'PP', 'PP', 'R2', 'H2', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'PP', 'H5', 'R9'],
                ['PP', 'PP', 'PP', 'PP', 'H8', 'PP', 'PP', 'V8', 'PP', 'PP', 'R2', 'H8', 'H8', 'R9', 'PP', 'PP', 'H8', 'R2', 'R2', 'R2', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'PP', 'H8', 'PP', 'V3', 'R2'],
                ['V8', 'R9', 'H8', 'R2', 'PP', 'PP', 'PP', 'H8', 'V8', 'PP', 'PP', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'R9', 'H8', 'PP', 'R2', 'H8', 'V8', 'R2', 'PP', 'R2', 'PP', 'R9', 'R9', 'PP', 'PP', 'V8'],
                ['R2', 'PP', 'PP', 'H8', 'R9', 'PP', 'PP', 'V8', 'R2', 'PP', 'R2', 'H8', 'H8', 'PP', 'PP', 'PP', 'R9', 'PP', 'H8', 'H8', 'PP', 'PP', 'PP', 'PP', 'V8', 'R2', 'PP', 'PP', 'R2', 'R2', 'PP', 'PP'],
                ['R9', 'H8', 'V2', 'R9', 'R2', 'PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'R9', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'H8', 'PP', 'PP', 'H8', 'R2', 'R9', 'PP', 'R2', 'R5'],
                ['PP', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'R9', 'R2', 'PP', 'H8', 'R9', 'PP', 'PP', 'PP', 'PP', 'V8', 'PP', 'R9', 'R9', 'PP', 'PP', 'PP', 'R9', 'V8', 'V8', 'PP', 'PP', 'PP', 'PP', 'PP', 'V8'],
                ['PP', 'R2', 'PP', 'PP', 'R2', 'H8', 'H8', 'PP', 'H8', 'R9', 'R9', 'PP', 'R2', 'PP', 'R2', 'R9', 'R9', 'V8', 'PP', 'R2', 'R2', 'H8', 'R2', 'PP', 'PP', 'PP', 'R9', 'H8', 'PP', 'PP', 'PP', 'PP'],
                ['PP', 'PP', 'PP', 'V8', 'R2', 'PP', 'PP', 'H8', 'R9', 'H8', 'PP', 'PP', 'PP', 'R2', 'H8', 'PP', 'R2', 'PP', 'PP', 'R2', 'R9', 'R2', 'R2', 'PP', 'PP', 'PP', 'V8', 'PP', 'V8', 'H8', 'R1', 'PP'],
                ['PP', 'PP', 'R9', 'H2', 'PP', 'R9', 'R2', 'PP', 'PP', 'PP', 'V8', 'PP', 'R9', 'H8', 'H3', 'PP', 'R9', 'H8', 'PP', 'V8', 'PP', 'V1', 'R9', 'R9', 'R9', 'R9', 'R2', 'PP', 'PP', 'PP', 'R9', 'PP'],
                ['R1', 'H4', 'PP', 'R2', 'PP', 'R2', 'PP', 'V8', 'PP', 'R2', 'PP', 'R9', 'PP', 'PP', 'R9', 'R2', 'H1', 'PP', 'V8', 'PP', 'R2', 'R9', 'R2', 'R9', 'R9', 'R2', 'PP', 'R9', 'PP', 'R2', 'PP', 'PP'],
                ['PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'PP', 'R2', 'PP', 'PP', 'V8', 'H8', 'H8', 'PP', 'PP', 'PP', 'PP', 'R2', 'R2', 'H8', 'V8', 'V8', 'PP', 'V8', 'R2', 'PP', 'PP', 'R2', 'PP', 'R5', 'H2', 'H3'],
        ]
        tablero = Tablero(tablero_str)
        tablero.limpiar()
        # Verificar formato y respuesta
        self.assertIsInstance(tablero.tablero, list)
        self.assertListEqual(tablero.tablero, [
                ['R2', '--', '--', 'R2', 'V8', 'V8', '--', '--', '--', 'R9', 'R2', '--', '--', 'V8', '--', 'R9', '--', '--', 'R2', '--', '--', '--', '--', '--', 'R2', 'H6', 'R9', '--', '--', 'R2', '--', '--'],
                ['R2', 'H8', 'H8', '--', 'V6', 'V8', '--', 'H8', 'R2', '--', 'R9', '--', '--', '--', '--', 'R2', '--', '--', '--', '--', 'R2', 'R2', '--', 'H8', '--', 'R2', 'H8', '--', 'H8', 'H8', 'R2', '--'],
                ['V8', '--', '--', 'H6', '--', 'R2', '--', '--', '--', 'R9', 'V8', '--', 'V8', 'H8', '--', 'H8', '--', 'R9', 'H8', '--', '--', 'H8', 'R9', 'R2', 'V8', '--', '--', '--', 'H8', '--', '--', '--'],
                ['R9', '--', '--', 'H8', 'R2', 'V8', 'R9', 'R9', 'V8', 'H3', '--', '--', '--', 'R9', 'V8', '--', 'H8', 'H8', 'V8', '--', 'H6', '--', 'H8', '--', '--', 'R9', '--', '--', '--', 'R9', '--', '--'],
                ['--', 'H9', '--', 'V8', 'V8', '--', '--', '--', '--', 'H3', 'R2', 'R2', 'R2', 'R2', 'H8', '--', 'R2', '--', 'V8', '--', '--', 'V8', '--', '--', '--', '--', '--', '--', 'V8', '--', 'H8', 'V8'],
                ['R2', '--', '--', 'H8', 'R2', '--', '--', '--', '--', 'H8', 'V8', 'H8', 'R9', 'R9', '--', 'R9', '--', '--', '--', '--', '--', '--', 'R2', 'R2', 'R7', '--', 'R2', 'V8', 'R2', '--', '--', 'H8'],
                ['H8', '--', '--', '--', 'H9', 'H8', '--', '--', 'R2', '--', '--', 'R9', 'H8', '--', 'R9', '--', '--', 'R2', '--', '--', 'R2', 'R9', '--', '--', 'R2', '--', '--', '--', 'R9', '--', 'R7', '--'],
                ['R9', 'R2', '--', 'R9', 'V8', '--', 'V8', '--', '--', 'R9', '--', 'R2', '--', 'R2', 'V2', 'V8', '--', '--', '--', '--', 'V8', 'R9', 'V8', '--', '--', 'R2', 'H8', '--', '--', 'R2', '--', '--'],
                ['--', 'R2', '--', 'R2', 'H8', '--', '--', 'R2', '--', 'R2', 'V8', 'V8', '--', '--', 'V8', 'R2', 'H8', '--', '--', '--', 'V8', '--', '--', '--', '--', '--', '--', 'V8', '--', 'R9', 'R2', 'R9'],
                ['R2', 'R9', 'R9', '--', 'R2', 'R2', 'R9', 'R2', 'R7', '--', '--', 'R2', '--', '--', '--', '--', '--', 'V8', '--', 'H9', 'R2', '--', '--', 'R9', 'R9', 'R9', '--', '--', '--', '--', 'H8', 'V8'],
                ['H8', 'R2', 'H8', '--', '--', 'H8', '--', '--', '--', 'R9', '--', 'R2', '--', '--', 'R9', 'V5', 'V8', '--', 'H8', '--', 'R2', 'R9', 'R9', '--', '--', 'R2', 'R9', 'H8', 'H8', '--', 'R9', '--'],
                ['--', '--', 'R9', '--', '--', '--', '--', '--', '--', 'R9', 'H8', '--', 'V8', '--', '--', 'V8', '--', 'H8', '--', '--', '--', '--', '--', 'R9', 'R9', 'H8', '--', '--', '--', 'R2', 'R9', '--'],
                ['R2', 'V8', 'V8', 'R9', 'R9', 'R9', 'V8', 'R6', '--', '--', '--', '--', 'R2', 'V8', '--', '--', '--', '--', 'R2', '--', '--', 'V8', '--', '--', '--', 'H8', 'V8', '--', '--', 'H8', '--', 'R9'],
                ['H8', '--', '--', 'R2', 'R9', 'H5', '--', 'V8', 'R2', 'R2', '--', '--', '--', 'R9', 'H8', '--', '--', '--', '--', 'V4', '--', 'R2', '--', '--', 'R9', 'R2', '--', '--', 'R2', '--', 'R2', '--'],
                ['--', '--', '--', 'V2', '--', 'V8', 'V8', '--', '--', 'R9', 'R9', 'R2', 'V8', '--', 'H8', 'R2', 'V7', 'R9', '--', '--', '--', '--', 'V4', '--', '--', 'R9', '--', 'R9', '--', '--', 'V8', '--'],
                ['R2', '--', '--', '--', '--', 'R2', 'R9', '--', 'R9', 'R2', '--', 'R9', 'R2', 'R2', '--', '--', '--', 'R9', 'R2', '--', 'H4', '--', 'H4', 'V8', '--', 'R2', 'V4', '--', 'R2', '--', 'R2', '--'],
                ['R9', 'R2', 'R2', '--', 'R9', '--', 'R9', 'R9', 'H8', '--', 'R9', 'R2', '--', 'V7', '--', 'R2', '--', '--', 'H8', 'R2', '--', '--', 'H6', '--', 'H8', '--', '--', 'V8', 'H8', 'H8', 'R9', '--'],
                ['R2', 'R9', 'V8', '--', '--', 'R6', '--', 'H1', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', 'R9', '--', 'R9', '--', '--', 'H6', 'R2', '--', 'R9', 'H8', 'H8', 'R9', 'R9', 'V2'],
                ['--', 'R2', 'R9', '--', '--', '--', '--', '--', 'V8', '--', 'R9', '--', 'V5', '--', '--', 'R9', 'R9', 'R2', 'R2', '--', 'H5', '--', 'R2', 'R2', '--', '--', '--', 'V9', '--', 'H8', '--', 'R9'],
                ['R9', '--', 'H8', 'R9', '--', '--', '--', 'R2', 'V8', 'R2', '--', '--', '--', '--', '--', '--', '--', 'R2', 'R9', 'H8', '--', '--', 'R1', '--', 'V8', 'V8', 'R9', '--', 'R2', '--', '--', 'R2'],
                ['R2', 'R2', '--', 'R2', '--', '--', '--', '--', 'H8', '--', 'V8', '--', '--', 'H8', '--', 'R2', 'R9', 'R9', 'R2', '--', 'V8', '--', '--', 'H8', 'H8', '--', 'H8', 'R9', '--', 'R2', '--', 'R9'],
                ['R9', '--', '--', '--', '--', 'R9', '--', 'R2', '--', '--', '--', 'R2', '--', '--', 'R9', 'R2', 'H8', 'R9', 'H8', '--', '--', 'R2', 'H2', '--', '--', 'R2', '--', '--', '--', '--', 'H5', 'R9'],
                ['--', '--', '--', '--', 'H8', '--', '--', 'V8', '--', '--', 'R2', 'H8', 'H8', 'R9', '--', '--', 'H8', 'R2', 'R2', 'R2', '--', 'V8', '--', '--', '--', '--', '--', '--', 'H8', '--', 'V3', 'R2'],
                ['V8', 'R9', 'H8', 'R2', '--', '--', '--', 'H8', 'V8', '--', '--', 'V8', '--', '--', '--', '--', '--', 'R9', 'H8', '--', 'R2', 'H8', 'V8', 'R2', '--', 'R2', '--', 'R9', 'R9', '--', '--', 'V8'],
                ['R2', '--', '--', 'H8', 'R9', '--', '--', 'V8', 'R2', '--', 'R2', 'H8', 'H8', '--', '--', '--', 'R9', '--', 'H8', 'H8', '--', '--', '--', '--', 'V8', 'R2', '--', '--', 'R2', 'R2', '--', '--'],
                ['R9', 'H8', 'V2', 'R9', 'R2', '--', '--', '--', '--', 'R2', '--', '--', 'R9', '--', '--', 'R2', '--', '--', '--', 'R2', '--', '--', '--', 'H8', '--', '--', 'H8', 'R2', 'R9', '--', 'R2', 'R5'],
                ['--', '--', '--', '--', 'R2', '--', '--', 'R9', 'R2', '--', 'H8', 'R9', '--', '--', '--', '--', 'V8', '--', 'R9', 'R9', '--', '--', '--', 'R9', 'V8', 'V8', '--', '--', '--', '--', '--', 'V8'],
                ['--', 'R2', '--', '--', 'R2', 'H8', 'H8', '--', 'H8', 'R9', 'R9', '--', 'R2', '--', 'R2', 'R9', 'R9', 'V8', '--', 'R2', 'R2', 'H8', 'R2', '--', '--', '--', 'R9', 'H8', '--', '--', '--', '--'],
                ['--', '--', '--', 'V8', 'R2', '--', '--', 'H8', 'R9', 'H8', '--', '--', '--', 'R2', 'H8', '--', 'R2', '--', '--', 'R2', 'R9', 'R2', 'R2', '--', '--', '--', 'V8', '--', 'V8', 'H8', 'R1', '--'],
                ['--', '--', 'R9', 'H2', '--', 'R9', 'R2', '--', '--', '--', 'V8', '--', 'R9', 'H8', 'H3', '--', 'R9', 'H8', '--', 'V8', '--', 'V1', 'R9', 'R9', 'R9', 'R9', 'R2', '--', '--', '--', 'R9', '--'],
                ['R1', 'H4', '--', 'R2', '--', 'R2', '--', 'V8', '--', 'R2', '--', 'R9', '--', '--', 'R9', 'R2', 'H1', '--', 'V8', '--', 'R2', 'R9', 'R2', 'R9', 'R9', 'R2', '--', 'R9', '--', 'R2', '--', '--'],
                ['--', '--', '--', 'R2', '--', '--', '--', 'R2', '--', '--', 'V8', 'H8', 'H8', '--', '--', '--', '--', 'R2', 'R2', 'H8', 'V8', 'V8', '--', 'V8', 'R2', '--', '--', 'R2', '--', 'R5', 'H2', 'H3'],
            ])

    def test_vacio(self):
        tablero_str = [



            ['--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--', '--'],




        ]
        tablero = Tablero(tablero_str)
        tablero.limpiar()
        # Verificar formato y respuesta
        self.assertIsInstance(tablero.tablero, list)
        self.assertListEqual(tablero.tablero, [








            ])

    def test_solo_peones(self):
        tablero_str = [






        ]
        tablero = Tablero(tablero_str)
        tablero.limpiar()
        # Verificar formato y respuesta
        self.assertIsInstance(tablero.tablero, list)
        self.assertListEqual(tablero.tablero, [






            ])



if __name__ == "__main__":
    from io import StringIO
    from unittest.mock import patch

    with patch('sys.stdout', new=StringIO()):
        from io import StringIO
    from unittest.mock import patch

    with patch('sys.stdout', new=StringIO()):
        unittest.main(verbosity=1)

